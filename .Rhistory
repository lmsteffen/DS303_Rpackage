library(lmstt)
library(devtools)
load_all
load_all()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(lmstt)
check()
library(lmstt)
library(devtools)
load_all
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(lmstt)
load_all()
library(lmstt)
load_all()
library(devtools)
load_all()
setwd("~/D303/DS303_Rpackage/lmstt/vignettes")
load_all()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(lmstt)
data("oilSpills")
oilSpills %>% dplyr::filter(Source == "Vessel sources, total" |
Source == "Nonvessel sources, total"|
Source == "Mysteryc") %>%
plotly::plot_ly(x = ~Year, y =~`Gallons spilled`, color = ~Source, type="bar", colors =
c("#a6cee3", "#1f78b4", "#b2df8a"),
width = 1000) %>%
plotly::layout(yaxis = list(fixedrange = FALSE),
updatemenus = list(
list(
type = "buttons",
x = 0.6,
y = 1,
direction = "right",
buttons = list(
list(method = "relayout",
args = list("barmode","dodge"),
label = "Grouped"),
list(method = "relayout",
args = list("barmode","stack"),
label = "Stacked")))
))
oilSpills %>% dplyr::filter(Source == "Vessel sources, total"|
Source == "Nonvessel sources, total"|
Source == "Mysteryc")  %>%
tidyr::drop_na() %>%
plotly::plot_ly(width = 1000) %>%
plotly::add_trace(x = ~Year, y = ~Incidents, type = 'scatter', color =~Source, mode = 'lines+markers',
colors = c("#a6cee3", "#1f78b4", "#b2df8a"))
y2 <- list(
overlaying = "y",
side = "right",
title = "Number of Incidents",
automargin = T)
oilSpills %>% dplyr::filter(Source != "TOTAL all spills",
Source != "Vessel sources, total",
Source != "Nonvessel sources, total")  %>%
tidyr::drop_na() %>%
dplyr::mutate(Source = fct_reorder(Source, desc(`Gallons spilled`))) %>%
plotly::plot_ly(x = ~Year, y =~`Gallons spilled`, color = ~Source, type="bar", colors = "Accent",
width = 1000, height = 500) %>%
dplyr::group_by(Year) %>%
dplyr::summarise(n = sum(Incidents)) %>%
plotly::add_trace(x = ~Year, y = ~n, type = 'scatter',  mode = 'markers',
name = "Incidents", yaxis = "y2", color = I("black")) %>%
plotly::layout(yaxis2 = y2,
yaxis = list(fixedrange = FALSE),
updatemenus = list(
list(
type = "buttons",
x = 0.6,
y = 1,
direction = "right",
buttons = list(
list(method = "relayout",
args = list("barmode","dodge"),
label = "Grouped"),
list(method = "relayout",
args = list("barmode","stack"),
label = "Stacked")))
)) %>%
plotly::rangeslider()
y2 <- list(
overlaying = "y",
side = "right",
title = "Number of Incidents",
automargin = T)
oilSpills %>% dplyr::filter(Source != "TOTAL all spills",
Source != "Vessel sources, total",
Source != "Nonvessel sources, total")  %>%
tidyr::drop_na() %>%
dplyr::mutate(Source = forcats::fct_reorder(Source, desc(`Gallons spilled`))) %>%
plotly::plot_ly(x = ~Year, y =~`Gallons spilled`, color = ~Source, type="bar", colors = "Accent",
width = 1000, height = 500) %>%
dplyr::group_by(Year) %>%
dplyr::summarise(n = sum(Incidents)) %>%
plotly::add_trace(x = ~Year, y = ~n, type = 'scatter',  mode = 'markers',
name = "Incidents", yaxis = "y2", color = I("black")) %>%
plotly::layout(yaxis2 = y2,
yaxis = list(fixedrange = FALSE),
updatemenus = list(
list(
type = "buttons",
x = 0.6,
y = 1,
direction = "right",
buttons = list(
list(method = "relayout",
args = list("barmode","dodge"),
label = "Grouped"),
list(method = "relayout",
args = list("barmode","stack"),
label = "Stacked")))
)) %>%
plotly::rangeslider()
y2 <- list(
overlaying = "y",
side = "right",
title = "Number of Incidents",
automargin = T)
oilSpills %>% dplyr::filter(Source != "TOTAL all spills",
Source != "Vessel sources, total",
Source != "Nonvessel sources, total")  %>%
tidyr::drop_na() %>%
dplyr::mutate(Source = fct_reorder(Source, desc(`Gallons spilled`))) %>%
plotly::plot_ly(x = ~Year, y =~`Gallons spilled`, color = ~Source, type="bar", colors = "Accent",
width = 1000, height = 500) %>%
dplyr::group_by(Year) %>%
dplyr::summarise(n = sum(Incidents)) %>%
plotly::add_trace(x = ~Year, y = ~n, type = 'scatter',  mode = 'markers',
name = "Incidents", yaxis = "y2", color = I("black")) %>%
plotly::layout(yaxis2 = y2,
yaxis = list(fixedrange = FALSE),
updatemenus = list(
list(
type = "buttons",
x = 0.6,
y = 1,
direction = "right",
buttons = list(
list(method = "relayout",
args = list("barmode","dodge"),
label = "Grouped"),
list(method = "relayout",
args = list("barmode","stack"),
label = "Stacked")))
)) %>%
plotly::rangeslider()
library(lmstt)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
shared_le <- crosstalk::SharedData$new(le)
crosstalk::bscols(widths = c(2,NA),
list(
crosstalk::filter_select("continent", "Continent", shared_le, ~continent)
),
plotly::ggplotly(shared_le |>
ggplot2::ggplot(ggplot2::aes(gdp_per_capita, life_expectancy)) +
ggplot2::geom_point(ggplot2::aes(size = population_historical_estimates, frame = year, ids = entity, color = continent)) +
ggplot2::scale_x_log10() +
ggplot2::labs(x = "GDP per Capita", y = "Life Expectancy", size = ""))
)
le_na <- le |> dplyr::filter(continent == "North America")
shared_le_na <- crosstalk::SharedData$new(le_na)
crosstalk::bscols(widths = c(2,NA),
list(
crosstalk::filter_select("entity", "Country", shared_le_na, ~entity)
),
plotly::ggplotly(
ggplot2::ggplot(data = shared_le_na, ggplot2::aes(gdp_per_capita, life_expectancy)) +
ggplot2::geom_point(ggplot2::aes(size = population_historical_estimates, frame = year, color = entity)) +
ggplot2::scale_x_log10() +
ggplot2::labs(x = "GDP per Capita", y = "Life Expectancy", color = "Country", size = ""))
)
crosstalk::bscols(widths = c(2,4,6),
list(
crosstalk::filter_select("entity", "Country", shared_le, ~entity),
crosstalk::filter_slider("year", "Years", shared_le, ~year, round = TRUE)
),
plotly::add_lines(shared_le |>
plotly::plot_ly(x = ~year, y = ~life_expectancy, color = ~entity, id = ~entity), showlegend = FALSE) |>
plotly::layout(xaxis = list(title = "Year"), yaxis = list(title = "Life Expectancy")),
plotly::add_lines(shared_le |>
plotly::plot_ly(x = ~year, y = ~gdp_per_capita, color = ~entity, id = ~entity) |>
plotly::layout(xaxis = list(title = "Year"), yaxis = list(title = "GDP Per Capita")))
)
y2 <- list(
overlaying = "y",
side = "right",
title = "Number of Incidents",
automargin = T)
oilSpills %>% dplyr::filter(Source != "TOTAL all spills",
Source != "Vessel sources, total",
Source != "Nonvessel sources, total")  %>%
tidyr::drop_na() %>%
dplyr::mutate(Source = fct_reorder(Source, desc(`Gallons spilled`))) %>%
plotly::plot_ly(x = ~Year, y =~`Gallons spilled`, color = ~Source, type="bar", colors = "Accent",
width = 1000, height = 500) %>%
dplyr::group_by(Year) %>%
dplyr::summarise(n = sum(Incidents)) %>%
plotly::add_trace(x = ~Year, y = ~n, type = 'scatter',  mode = 'markers',
name = "Incidents", yaxis = "y2", color = I("black")) %>%
plotly::layout(yaxis2 = y2,
yaxis = list(fixedrange = FALSE),
updatemenus = list(
list(
type = "buttons",
x = 0.6,
y = 1,
direction = "right",
buttons = list(
list(method = "relayout",
args = list("barmode","dodge"),
label = "Grouped"),
list(method = "relayout",
args = list("barmode","stack"),
label = "Stacked")))
)) %>%
plotly::rangeslider()
y2 <- list(
overlaying = "y",
side = "right",
title = "Number of Incidents",
automargin = T)
oilSpills %>% dplyr::filter(Source != "TOTAL all spills",
Source != "Vessel sources, total",
Source != "Nonvessel sources, total")  %>%
tidyr::drop_na() %>%
dplyr::mutate(Source = forcats::fct_reorder(Source, desc(`Gallons spilled`))) %>%
plotly::plot_ly(x = ~Year, y =~`Gallons spilled`, color = ~Source, type="bar", colors = "Accent",
width = 1000, height = 500) %>%
dplyr::group_by(Year) %>%
dplyr::summarise(n = sum(Incidents)) %>%
plotly::add_trace(x = ~Year, y = ~n, type = 'scatter',  mode = 'markers',
name = "Incidents", yaxis = "y2", color = I("black")) %>%
plotly::layout(yaxis2 = y2,
yaxis = list(fixedrange = FALSE),
updatemenus = list(
list(
type = "buttons",
x = 0.6,
y = 1,
direction = "right",
buttons = list(
list(method = "relayout",
args = list("barmode","dodge"),
label = "Grouped"),
list(method = "relayout",
args = list("barmode","stack"),
label = "Stacked")))
)) %>%
plotly::rangeslider()
y2 <- list(
overlaying = "y",
side = "right",
title = "Number of Incidents",
automargin = T)
oilSpills %>% dplyr::filter(Source != "TOTAL all spills",
Source != "Vessel sources, total",
Source != "Nonvessel sources, total")  %>%
tidyr::drop_na() %>%
dplyr::mutate(Source = forcats::fct_reorder(Source, dplyr::desc(`Gallons spilled`))) %>%
plotly::plot_ly(x = ~Year, y =~`Gallons spilled`, color = ~Source, type="bar", colors = "Accent",
width = 1000, height = 500) %>%
dplyr::group_by(Year) %>%
dplyr::summarise(n = sum(Incidents)) %>%
plotly::add_trace(x = ~Year, y = ~n, type = 'scatter',  mode = 'markers',
name = "Incidents", yaxis = "y2", color = I("black")) %>%
plotly::layout(yaxis2 = y2,
yaxis = list(fixedrange = FALSE),
updatemenus = list(
list(
type = "buttons",
x = 0.6,
y = 1,
direction = "right",
buttons = list(
list(method = "relayout",
args = list("barmode","dodge"),
label = "Grouped"),
list(method = "relayout",
args = list("barmode","stack"),
label = "Stacked")))
)) %>%
plotly::rangeslider()
devtools::check()
